#!/bin/zsh

# Prepare
tests=()
export ZPLUG_HOME="/tmp/zplug-$RANDOM"
export ZPLUG_REPOS="$ZPLUG_HOME/repos"
mkdir -p "$ZPLUG_HOME" "$ZPLUG_REPOS"

# Prepare
source "$ZPLUG_ROOT/init.zsh"
zplugs=()
zplug clear

# as
{
    # plugin
    zplug "tcnksm/docker-alias", \
        use:zshrc
    # command
    zplug "Jxck/dotfiles", \
        as:command, \
        use:"bin/{histuniq,color}"

    tests+=(
    '(( $+aliases[dl] ))'
    '[[ -x $ZPLUG_HOME/bin/histuniq ]]'
    '[[ -x $ZPLUG_HOME/bin/color ]]'
    )
}

# at
{
    # branch
    zplug "b4b4r07/enhancd", \
        at:v1, \
        use:"*.sh"
    # commit
    zplug "mollifier/anyframe", \
        at:4c23cb60

    tests+=(
    '(( $+functions[enhancd_cd] ))'
    '(( $+functions[anyframe-init] ))'
    )
}

# from
{
    # github
    zplug "zsh-users/zsh-syntax-highlighting", \
        from:github, \
        as:plugin
    zplug "mrowa44/emojify", \
        from:github, \
        as:command
    # bitbucket
    zplug "b4b4r07/hello_bitbucket", \
        from:bitbucket, \
        as:command, \
        hook-build:"chmod 755 *.sh", \
        use:"*.sh"
    # oh-my-zsh
    zplug "plugins/git", \
        from:oh-my-zsh
    zplug "plugins/cp", \
        from:oh-my-zsh
    zplug "plugins/emoji", \
        from:oh-my-zsh
    # gh-r
    zplug "peco/peco", \
        as:command, \
        from:gh-r, \
        frozen:1
    # gist
    zplug "b4b4r07/79ee61f7c140c63d2786", \
        from:gist, \
        as:command, \
        use:get_last_pane_path.sh
    # local
    ## skip

    tests+=(
    '(( $+functions[_zsh_highlight] ))'
    '[[ -x $ZPLUG_HOME/bin/emojify ]]'
    '[[ -x $ZPLUG_HOME/bin/hello.sh ]]'
    '(( $+aliases[gba] ))'
    '(( $+aliases[cpv] ))'
    '(( $+functions[random_emoji] ))'
    '[[ -x $ZPLUG_HOME/bin/peco ]]'
    '[[ -x $ZPLUG_HOME/bin/get_last_pane_path.sh ]]'
    )
}

# depth
{
    :
}

# dir
{
    : 'SKIP' 'TODO'
}

# frozen
{
    : 'SKIP'
}

# hook-build
{
    :
}

# hook-load
{
    :
}

# if
{
    zplug "tj/n", \
        as:command, \
        use:"bin/n", \
        if:'(( $+commands[node] ))'

    tests+=(
    '[[ ! -x $ZPLUG_HOME/bin/n ]]'
    )
}

# ignore
{
    :
}

# lazy
{
    :
}

# nice
{
    :
}

# on
{
    zplug "stedolan/jq", \
        from:gh-r, \
        as:command, \
        rename-to:jq
    zplug "b4b4r07/emoji-cli", \
        on:"stedolan/jq"

    tests+=(
    '(( $+functions[emoji::cli] ))'
    '[[ -x $ZPLUG_HOME/bin/jq ]]'
    )
}

# rename-to
{
    zplug "junegunn/fzf-bin", \
        as:command, \
        from:gh-r, \
        rename-to:fzf, \
        use:"*darwin*amd64*"

    tests+=(
    '[[ -x $ZPLUG_HOME/bin/fzf ]]'
    )
}


# use
{
    :
}

zplug install        || exit 1
zplug load --verbose || exit 1

ret=0
for test in "$tests[@]"
do
    eval "$test"
    if (( $status != 0 )); then
        printf "$fg[red]FAIL: $test$reset_color\n" >&2
        ret=1
    fi
done

exit $ret
